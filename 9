#include <iostream>
#include <algorithm>

using namespace std;

// Function to build a max heap or min heap
void heapify(int arr[], int n, int i, bool isMaxHeap)
{
    int largest = i;
    int l = 2 * i + 1;
    int r = 2 * i + 2;

    // If left child is larger than root (max heap) or smaller than root (min heap)
    if ((isMaxHeap && l < n && arr[l] > arr[largest]) || (!isMaxHeap && l < n && arr[l] < arr[largest]))
        largest = l; 

    // If right child is larger than largest so far (max heap) or smaller than largest so far (min heap)
    if ((isMaxHeap && r < n && arr[r] > arr[largest]) || (!isMaxHeap && r < n && arr[r] < arr[largest]))
        largest = r;

    // If largest is not root
    if (largest != i)
    {
        swap(arr[i], arr[largest]);

        // Recursively heapify the affected sub-tree
        heapify(arr, n, largest, isMaxHeap);
    }
}

// Main function to sort an array of given size
void heapSort(int arr[], int n, bool isMaxHeap)
{
    // Build heap (rearrange array)
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i, isMaxHeap);

    // One by one extract an element from heap
    for (int i = n - 1; i >= 0; i--)
    {
        // Move current root to end
        swap(arr[0], arr[i]);

        // call max heapify on the reduced heap
        heapify(arr, i, 0, isMaxHeap);
    }
}

// Driver code
int main()
{
    while (true)
    {
        int n;
        cout << "Enter the size of the array: ";
        cin >> n;

        int arr[n];
        cout << "Enter the elements of the array: ";
        for (int i = 0; i < n; i++)
            cin >> arr[i];

        bool isMaxHeap;
        do
        {
            cout << "Enter \n 1) Max heap, \n 2) Min heap \n 3) Exit: ";
            int choice;
            cin >> choice;

            switch (choice)
            {
                case 1:
                    isMaxHeap = true;
                    break;
                case 2:
                    isMaxHeap = false;
                    break;
                case 3:
                    cout << "Exiting program." << endl;
                    return 0;
                default:
                    cout << "Invalid choice! Please try again." << endl;
                    continue;
            }

            break;
        } while (true);

        heapSort(arr, n, isMaxHeap);

        cout << "Sorted array is: ";
        for (int i = 0; i < n; i++)
            cout << arr[i] << " ";

        cout << endl;
    }
}
